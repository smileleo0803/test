/*SME外幣需求*/
/*客戶Base*/
--temp_analysisdev.Z35615_SMEBase_2004


/*2020/2-4月*/
create table temp_analysisdev.Z35615_extxn_L3M_CNT as (
select c_flag , base.sme_id
--次數
,sum(case when currency_code_1='USD' then 1 else 0 end) as "cnt_USD_L3M"
,sum(case when currency_code_1='JPY' then 1 else 0 end) as "cnt_JPY_L3M"
,sum(case when currency_code_1='CNY' then 1 else 0 end) as "cnt_CNY_L3M"
,sum(case when currency_code_1='CNH' then 1 else 0 end) as "cnt_CNH_L3M"
,sum(case when currency_code_1='EUR' then 1 else 0 end) as "cnt_EUR_L3M"
,sum(case when currency_code_1='AUD' then 1 else 0 end) as "cnt_AUD_L3M"

,max(case when currency_code_1='USD' then trade_rate end) as "maxrate_USD_L3M"
,max(case when currency_code_1='JPY' then trade_rate end) as "maxrate_JPY_L3M"
,max(case when currency_code_1='CNY' then trade_rate end) as "maxrate_CNY_L3M"
,max(case when currency_code_1='CNH' then trade_rate end) as "maxrate_CNH_L3M"
,max(case when currency_code_1='EUR' then trade_rate end) as "maxrate_EUR_L3M"
,max(case when currency_code_1='AUD' then trade_rate end) as "maxrate_AUD_L3M"

,min(case when currency_code_1='USD' then trade_rate end) as "minrate_USD_L3M"
,min(case when currency_code_1='JPY' then trade_rate end) as "minrate_JPY_L3M"
,min(case when currency_code_1='CNY' then trade_rate end) as "minrate_CNY_L3M"
,min(case when currency_code_1='CNH' then trade_rate end) as "minrate_CNH_L3M"
,min(case when currency_code_1='EUR' then trade_rate end) as "minrate_EUR_L3M"
,min(case when currency_code_1='AUD' then trade_rate end) as "minrate_AUD_L3M"

,sum(case when currency_code_1='USD' then Txn_Amt else 0 end) as "AMT_USD_L3M"
,sum(case when currency_code_1='JPY' then Txn_Amt else 0 end) as "AMT_JPY_L3M"
,sum(case when currency_code_1='CNY' then Txn_Amt else 0 end) as "AMT_CNY_L3M"
,sum(case when currency_code_1='CNH' then Txn_Amt else 0 end) as "AMT_CNH_L3M"
,sum(case when currency_code_1='EUR' then Txn_Amt else 0 end) as "AMT_EUR_L3M"
,sum(case when currency_code_1='AUD' then Txn_Amt else 0 end) as "AMT_AUD_L3M"

,sum(case when currency_code_1='USD' then REV else 0 end) as "REV_USD_L3M"
,sum(case when currency_code_1='JPY' then REV else 0 end) as "REV_JPY_L3M"
,sum(case when currency_code_1='CNY' then REV else 0 end) as "REV_CNY_L3M"
,sum(case when currency_code_1='CNH' then REV else 0 end) as "REV_CNH_L3M"
,sum(case when currency_code_1='EUR' then REV else 0 end) as "REV_EUR_L3M"
,sum(case when currency_code_1='AUD' then REV else 0 end) as "REV_AUD_L3M"

,sum(case when currency_code_1='USD' then Must_Rev else 0 end) as "Must_R_USD_L3M"
,sum(case when currency_code_1='JPY' then Must_Rev else 0 end) as "Must_R_JPY_L3M"
,sum(case when currency_code_1='CNY' then Must_Rev else 0 end) as "Must_R_CNY_L3M"
,sum(case when currency_code_1='CNH' then Must_Rev else 0 end) as "Must_R_CNH_L3M"
,sum(case when currency_code_1='EUR' then Must_Rev else 0 end) as "Must_R_EUR_L3M"
,sum(case when currency_code_1='AUD' then Must_Rev else 0 end) as "Must_R_AUD_L3M"


from temp_analysisdev.Z35615_SMEBase_2004 as base  
left join temp_analysisdev.Z35615_extxn_L3M_2004 as ex on base.sme_id = ex.customer_id
-- where c_flag='台轉外'
where currency_code_1 in ('USD','JPY','CNY','CNH','EUR','AUD')
group by 1,2
) with data;

/*2019年*/
create table temp_analysisdev.Z35615_extxn_2019_CNT as (
select c_flag , base.sme_id
--次數
,sum(case when currency_code_1='USD' then 1 else 0 end) as "cnt_USD_2019"
,sum(case when currency_code_1='JPY' then 1 else 0 end) as "cnt_JPY_2019"
,sum(case when currency_code_1='CNY' then 1 else 0 end) as "cnt_CNY_2019"
,sum(case when currency_code_1='CNH' then 1 else 0 end) as "cnt_CNH_2019"
,sum(case when currency_code_1='EUR' then 1 else 0 end) as "cnt_EUR_2019"
,sum(case when currency_code_1='AUD' then 1 else 0 end) as "cnt_AUD_2019"

,max(case when currency_code_1='USD' then trade_rate end) as "maxrate_USD_2019"
,max(case when currency_code_1='JPY' then trade_rate end) as "maxrate_JPY_2019"
,max(case when currency_code_1='CNY' then trade_rate end) as "maxrate_CNY_2019"
,max(case when currency_code_1='CNH' then trade_rate end) as "maxrate_CNH_2019"
,max(case when currency_code_1='EUR' then trade_rate end) as "maxrate_EUR_2019"
,max(case when currency_code_1='AUD' then trade_rate end) as "maxrate_AUD_2019"

,min(case when currency_code_1='USD' then trade_rate end) as "minrate_USD_2019"
,min(case when currency_code_1='JPY' then trade_rate end) as "minrate_JPY_2019"
,min(case when currency_code_1='CNY' then trade_rate end) as "minrate_CNY_2019"
,min(case when currency_code_1='CNH' then trade_rate end) as "minrate_CNH_2019"
,min(case when currency_code_1='EUR' then trade_rate end) as "minrate_EUR_2019"
,min(case when currency_code_1='AUD' then trade_rate end) as "minrate_AUD_2019"

,sum(case when currency_code_1='USD' then Txn_Amt else 0 end) as "AMT_USD_2019"
,sum(case when currency_code_1='JPY' then Txn_Amt else 0 end) as "AMT_JPY_2019"
,sum(case when currency_code_1='CNY' then Txn_Amt else 0 end) as "AMT_CNY_2019"
,sum(case when currency_code_1='CNH' then Txn_Amt else 0 end) as "AMT_CNH_2019"
,sum(case when currency_code_1='EUR' then Txn_Amt else 0 end) as "AMT_EUR_2019"
,sum(case when currency_code_1='AUD' then Txn_Amt else 0 end) as "AMT_AUD_2019"

,sum(case when currency_code_1='USD' then REV else 0 end) as "REV_USD_2019"
,sum(case when currency_code_1='JPY' then REV else 0 end) as "REV_JPY_2019"
,sum(case when currency_code_1='CNY' then REV else 0 end) as "REV_CNY_2019"
,sum(case when currency_code_1='CNH' then REV else 0 end) as "REV_CNH_2019"
,sum(case when currency_code_1='EUR' then REV else 0 end) as "REV_EUR_2019"
,sum(case when currency_code_1='AUD' then REV else 0 end) as "REV_AUD_2019"

,sum(case when currency_code_1='USD' then Must_Rev else 0 end) as "Must_R_USD_2019"
,sum(case when currency_code_1='JPY' then Must_Rev else 0 end) as "Must_R_JPY_2019"
,sum(case when currency_code_1='CNY' then Must_Rev else 0 end) as "Must_R_CNY_2019"
,sum(case when currency_code_1='CNH' then Must_Rev else 0 end) as "Must_R_CNH_2019"
,sum(case when currency_code_1='EUR' then Must_Rev else 0 end) as "Must_R_EUR_2019"
,sum(case when currency_code_1='AUD' then Must_Rev else 0 end) as "Must_R_AUD_2019"

from temp_analysisdev.Z35615_SMEBase_2004 as base 
left join temp_analysisdev.Z35615_extxn_2019 as ex_2019 on base.sme_id = ex_2019.customer_id
--where c_flag='台轉外'
where currency_code_1 in ('USD','JPY','CNY','CNH','EUR','AUD')
group by 1 , 2
) with data;



select ex_L3M.c_flag as C_flag_L3M , ex_2019.c_flag as c_flag_2019 , base.sme_id ,base.smeo_id as smeo_id2 , substr(base.smeo_id , 1, 4) as smeo_id 
,base.sb_name , base.merchant_ind , base.SME_loan_ind
,base.target_flag ,base.channel
,smeo.segment , smeo.pool , smeo.membership
,case when xb.customer_id is not null then 1 else 0 end as xb_act_ind --有無外幣帳戶
,Current_Bal_NT as XB_Current_Bal --外幣餘額
,case when bgm_closed.customer_id is not null then 1 else 0 end as closed_flag  --是否停歇業
,case when trade2019.tax_id is not null then 1 else 0 end as trade2019_ind 
,trade2019.flag as Trade_2019   --2019進出口實績
,case when trade2018.tax_id is not null then 1 else 0 end as trade2018_ind
,trade2018.flag as Trade_2018   --2018進出口實績
,case when ex_L3M.sme_id is not null then 1 else 0 end as ex_L3M_ind --近三個月是否有換匯交易
,case when cnt_USD_L3M > 0 then 1 else 0 end as cnt_USD_L3M_ind
,case when cnt_JPY_L3M > 0 then 1 else 0 end as cnt_JPY_L3M_ind
,case when cnt_CNY_L3M > 0 then 1 else 0 end as cnt_CNY_L3M_ind
,case when cnt_CNH_L3M > 0 then 1 else 0 end as cnt_CNH_L3M_ind
,case when cnt_EUR_L3M > 0 then 1 else 0 end as cnt_EUR_L3M_ind
,case when cnt_AUD_L3M > 0 then 1 else 0 end as cnt_AUD_L3M_ind
,cnt_USD_L3M,cnt_JPY_L3M,cnt_CNY_L3M,cnt_CNH_L3M,cnt_EUR_L3M,cnt_AUD_L3M
,maxrate_USD_L3M, maxrate_JPY_L3M , maxrate_CNY_L3M , maxrate_CNH_L3M , maxrate_EUR_L3M , maxrate_AUD_L3M
,minrate_USD_L3M ,minrate_JPY_L3M,minrate_CNY_L3M,minrate_CNH_L3M,minrate_EUR_L3M,minrate_AUD_L3M
,AMT_USD_L3M,AMT_JPY_L3M,AMT_CNY_L3M,AMT_CNH_L3M,AMT_EUR_L3M,AMT_AUD_L3M
,REV_USD_L3M,REV_JPY_L3M,REV_CNY_L3M,REV_CNH_L3M,REV_EUR_L3M,REV_AUD_L3M
,Must_R_USD_L3M,Must_R_JPY_L3M,Must_R_CNY_L3M,Must_R_CNH_L3M,Must_R_EUR_L3M,Must_R_AUD_L3M


,case when ex_2019.sme_id is not null then 1 else 0 end as ex_2019_ind
,case when ex_L3M.sme_id is not null then 1 else 0 end as ex_L3M_ind
,case when cnt_USD_2019 > 0 then 1 else 0 end as cnt_USD_2019_ind
,case when cnt_JPY_2019 > 0 then 1 else 0 end as cnt_JPY_2019_ind
,case when cnt_CNY_2019 > 0 then 1 else 0 end as cnt_CNY_2019_ind
,case when cnt_CNH_2019 > 0 then 1 else 0 end as cnt_CNH_2019_ind
,case when cnt_EUR_2019 > 0 then 1 else 0 end as cnt_EUR_2019_ind
,case when cnt_AUD_2019 > 0 then 1 else 0 end as cnt_AUD_2019_ind
,cnt_USD_2019,cnt_JPY_2019,cnt_CNY_2019,cnt_CNH_2019,cnt_EUR_2019,cnt_AUD_2019
,maxrate_USD_2019, maxrate_JPY_2019 , maxrate_CNY_2019 , maxrate_CNH_2019 , maxrate_EUR_2019 , maxrate_AUD_2019
,minrate_USD_2019 ,minrate_JPY_2019,minrate_CNY_2019,minrate_CNH_2019,minrate_EUR_2019,minrate_AUD_2019
,AMT_USD_2019,AMT_JPY_2019,AMT_CNY_2019,AMT_CNH_2019,AMT_EUR_2019,AMT_AUD_2019
,REV_USD_2019,REV_JPY_2019,REV_CNY_2019,REV_CNH_2019,REV_EUR_2019,REV_AUD_2019
,Must_R_USD_2019,Must_R_JPY_2019,Must_R_CNY_2019,Must_R_CNH_2019,Must_R_EUR_2019,Must_R_AUD_2019

from temp_analysisdev.Z35615_SMEBase_2004 as base
left join (select customer_id , segment , pool , membership from temp_bps.wm_segment_2004 ) as SMEO on base.smeo_id = SMEO.customer_id
left join (select tax_id , flag from temp_analysisdev.sb_trade_value_range_2019 ) as trade2019 on base.sme_id = trade2019.tax_id
left join (select tax_id , flag from temp_analysisdev.sb_trade_value_range_2018 ) as trade2018 on base.sme_id = trade2018.tax_id
left join temp_analysisdev.Z35615_extxn_L3M_CNT as ex_L3M on base.sme_id = ex_L3M.sme_id 
left join temp_analysisdev.Z35615_extxn_2019_CNT as ex_2019 on base.sme_id = ex_2019.sme_id
left join (
	select customer_id, sum(Current_Bal_NT) Current_Bal_NT
	from vp_drv_model.DRV_ACCOUNT
	where Acct_Status_Code='80' and substr(Product_ID,1,5) ='WCM11'  --外幣存款  vp_drv_model.PRODUCT_LEVEL3_CODES
	group by 1	
) xb
on base.sme_id = xb.customer_id   --持有流通外幣帳戶
left join (select customer_id
			from temp_analysisdev.Z35615_Closed_200513 --停業
			union 
			select customer_id
			from temp_analysisdev.Z35615_OtherClosed_200513) as bgm_closed --停業外非營業(只有統編)
		on base.sme_id = bgm_closed.customer_id  --停歇業
;


drop table temp_analysisdev.Z35615_extxn_L3M_CNT ;
drop table temp_analysisdev.Z35615_extxn_2019_CNT ;